//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.08.21 at 02:41:15 PM MESZ 
//


package systemModel.fibexImporter.xsd31;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Content model for the entity ECU. Platform-specific extensions are not possible, to maintain the capability to describe multi-platform  networks.
 * 
 * <p>Java class for ECU-TYPE complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ECU-TYPE">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.asam.net/xml/fbx}REVISED-ELEMENT-TYPE">
 *       &lt;sequence>
 *         &lt;element name="DIAGNOSTIC-ADDRESSES" type="{http://www.asam.net/xml/fbx}DIAGNOSTIC-ADDRESSES" minOccurs="0"/>
 *         &lt;element name="FUNCTION-REFS" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://www.asam.net/xml/fbx}FUNCTION-REF" maxOccurs="unbounded"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="CONTROLLERS" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="CONTROLLER" type="{http://www.asam.net/xml/fbx}CONTROLLER-TYPE" maxOccurs="unbounded"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="CONNECTORS" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="CONNECTOR" type="{http://www.asam.net/xml/fbx}CONNECTOR-TYPE" maxOccurs="unbounded"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="MANUFACTURER-EXTENSION" type="{http://www.asam.net/xml/fbx}MANUFACTURER-ECU-EXTENSION" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ECU-TYPE", propOrder = {
    "diagnosticaddresses",
    "functionrefs",
    "controllers",
    "connectors",
    "manufacturerextension"
})
public class ECUTYPE
    extends REVISEDELEMENTTYPE
{

    @XmlElement(name = "DIAGNOSTIC-ADDRESSES")
    protected DIAGNOSTICADDRESSES diagnosticaddresses;
    @XmlElement(name = "FUNCTION-REFS")
    protected ECUTYPE.FUNCTIONREFS functionrefs;
    @XmlElement(name = "CONTROLLERS")
    protected ECUTYPE.CONTROLLERS controllers;
    @XmlElement(name = "CONNECTORS")
    protected ECUTYPE.CONNECTORS connectors;
    @XmlElement(name = "MANUFACTURER-EXTENSION")
    protected MANUFACTURERECUEXTENSION manufacturerextension;

    /**
     * Gets the value of the diagnosticaddresses property.
     * 
     * @return
     *     possible object is
     *     {@link DIAGNOSTICADDRESSES }
     *     
     */
    public DIAGNOSTICADDRESSES getDIAGNOSTICADDRESSES() {
        return diagnosticaddresses;
    }

    /**
     * Sets the value of the diagnosticaddresses property.
     * 
     * @param value
     *     allowed object is
     *     {@link DIAGNOSTICADDRESSES }
     *     
     */
    public void setDIAGNOSTICADDRESSES(DIAGNOSTICADDRESSES value) {
        this.diagnosticaddresses = value;
    }

    /**
     * Gets the value of the functionrefs property.
     * 
     * @return
     *     possible object is
     *     {@link ECUTYPE.FUNCTIONREFS }
     *     
     */
    public ECUTYPE.FUNCTIONREFS getFUNCTIONREFS() {
        return functionrefs;
    }

    /**
     * Sets the value of the functionrefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link ECUTYPE.FUNCTIONREFS }
     *     
     */
    public void setFUNCTIONREFS(ECUTYPE.FUNCTIONREFS value) {
        this.functionrefs = value;
    }

    /**
     * Gets the value of the controllers property.
     * 
     * @return
     *     possible object is
     *     {@link ECUTYPE.CONTROLLERS }
     *     
     */
    public ECUTYPE.CONTROLLERS getCONTROLLERS() {
        return controllers;
    }

    /**
     * Sets the value of the controllers property.
     * 
     * @param value
     *     allowed object is
     *     {@link ECUTYPE.CONTROLLERS }
     *     
     */
    public void setCONTROLLERS(ECUTYPE.CONTROLLERS value) {
        this.controllers = value;
    }

    /**
     * Gets the value of the connectors property.
     * 
     * @return
     *     possible object is
     *     {@link ECUTYPE.CONNECTORS }
     *     
     */
    public ECUTYPE.CONNECTORS getCONNECTORS() {
        return connectors;
    }

    /**
     * Sets the value of the connectors property.
     * 
     * @param value
     *     allowed object is
     *     {@link ECUTYPE.CONNECTORS }
     *     
     */
    public void setCONNECTORS(ECUTYPE.CONNECTORS value) {
        this.connectors = value;
    }

    /**
     * Gets the value of the manufacturerextension property.
     * 
     * @return
     *     possible object is
     *     {@link MANUFACTURERECUEXTENSION }
     *     
     */
    public MANUFACTURERECUEXTENSION getMANUFACTUREREXTENSION() {
        return manufacturerextension;
    }

    /**
     * Sets the value of the manufacturerextension property.
     * 
     * @param value
     *     allowed object is
     *     {@link MANUFACTURERECUEXTENSION }
     *     
     */
    public void setMANUFACTUREREXTENSION(MANUFACTURERECUEXTENSION value) {
        this.manufacturerextension = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="CONNECTOR" type="{http://www.asam.net/xml/fbx}CONNECTOR-TYPE" maxOccurs="unbounded"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "connector"
    })
    public static class CONNECTORS {

        @XmlElement(name = "CONNECTOR", required = true)
        protected List<CONNECTORTYPE> connector;

        /**
         * Gets the value of the connector property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the connector property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCONNECTOR().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link CONNECTORTYPE }
         * 
         * 
         */
        public List<CONNECTORTYPE> getCONNECTOR() {
            if (connector == null) {
                connector = new ArrayList<CONNECTORTYPE>();
            }
            return this.connector;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="CONTROLLER" type="{http://www.asam.net/xml/fbx}CONTROLLER-TYPE" maxOccurs="unbounded"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "controller"
    })
    public static class CONTROLLERS {

        @XmlElement(name = "CONTROLLER", required = true)
        protected List<CONTROLLERTYPE> controller;

        /**
         * Gets the value of the controller property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the controller property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCONTROLLER().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link CONTROLLERTYPE }
         * 
         * 
         */
        public List<CONTROLLERTYPE> getCONTROLLER() {
            if (controller == null) {
                controller = new ArrayList<CONTROLLERTYPE>();
            }
            return this.controller;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://www.asam.net/xml/fbx}FUNCTION-REF" maxOccurs="unbounded"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "functionref"
    })
    public static class FUNCTIONREFS {

        @XmlElement(name = "FUNCTION-REF", required = true)
        protected List<FUNCTIONREF> functionref;

        /**
         * Gets the value of the functionref property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the functionref property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getFUNCTIONREF().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FUNCTIONREF }
         * 
         * 
         */
        public List<FUNCTIONREF> getFUNCTIONREF() {
            if (functionref == null) {
                functionref = new ArrayList<FUNCTIONREF>();
            }
            return this.functionref;
        }

    }

}
